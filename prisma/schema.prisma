generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  products  Product[]
  orders    Order[]
}

model Token {
  id        Int       @id @default(autoincrement())
  token     String    @unique
  createdAt DateTime  @default(now())
}

model Product {
  id          Int       @id @default(autoincrement())
  name        String
  images      Image[]
  userId      Int
  user        User      @relation(fields: [userId], references: [id])
  price       Float
  description String?
  orders      OrderItem[]
}

model Image {
  id         Int       @id @default(autoincrement())
  secureUrl  String
  publicUrl  String
  productId  Int
  product    Product   @relation(fields: [productId], references: [id])
}

model Order {
  id        Int         @id @default(autoincrement())
  userId    Int
  user      User        @relation(fields: [userId], references: [id])
  items     OrderItem[]
  total     Float
  createdAt DateTime    @default(now())
  payment   Payment?
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  order     Order   @relation(fields: [orderId], references: [id])
  productId Int
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int
  price     Float
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
}

model Payment {
  id        Int           @id @default(autoincrement())
  orderId   Int           @unique
  order     Order         @relation(fields: [orderId], references: [id])
  amount    Float
  status    PaymentStatus @default(PENDING)
  createdAt DateTime      @default(now())
}